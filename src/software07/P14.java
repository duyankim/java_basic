package software07;

public class P14 {

	public static void main(String[] args) {
		/* 구분자된 필드 추출 처리2 2021-04-28 kopo03 김도연 */
		String[] k03_OneRec = {"해당연월,일본,중국,홍콩,대만,싱가폴,말레이시아,인도네시아,베트남,태국,아시아 기타,미국,서구 기타",
				"2018-01,3229,30131,1298,1912,1295,4556,1771,1100,4187,3325,848,3770",
				"2018-02,3045,32782,1468,2485,594,3751,1118,722,4017,2545,870,3659",
				"2018-03,5311,42243,2721,3279,1269,4782,1774,1806,5336,3507,2067,6520",
				"2018-04,5984,44257,4146,2971,1401,6023,2439,3683,5140,3119,2056,5463",
				"2018-05,7576,50010,3843,3567,2322,5601,1564,2123,5383,2631,1582,4869",
				"2018-06,8664,57754,7080,5290,5881,8081,2470,3061,4445,3000,2620,7370",
				"2018-07,9145,65723,4910,4374,3694,5839,1869,3405,1675,3266,3049,7210",
				"2018-08,11084,78485,6192,6354,1828,3971,1815,3633,1760,4297,3046,9307",
				"2018-09,7660,70124,4985,4296,2183,6354,1643,2305,4802,3970,4151,10525",
				"2018-10,10075,72022,4916,5589,3094,6413,2081,2952,5840,4810,4624,13059",
				"2018-11,9218,58883,4468,5628,2440,6028,2608,2820,5966,4907,3546,11052",
				"2018-12,5643,63706,3058,5596,2571,6954,2389,2623,6164,4344,2811,8453"};
		
		String[] field_name = k03_OneRec[0].split(",");	// 첫번째 줄에서 필드명을 배열로 가져옴
		for (int k03_i = 1; k03_i < k03_OneRec.length-1; k03_i++) {	// 레코드의 1번줄부터 끝까지 루프
			System.out.printf("*********************************\n"); // 구분선 프린트
			String[] field = k03_OneRec[k03_i].split(","); // 레코드를 콤마를 구분으로 자름
			System.out.printf(" %s : %s년 %s월\n", "날짜", field[0].substring(0,4), field[0].substring(5));//날짜 레코드를 출력함
			
			for (int k03_j = 1; k03_j < field_name.length; k03_j++) { // 각 레코드를 숫자 한글로 읽어서 출력함
				System.out.printf(" %s : %s명\n", field_name[k03_j], readInt(field[k03_j]));
			}
			System.out.printf("*********************************\n");
		}

	}

	static String readInt(String sNumVal) {
		String k03_sNumVoice = "";//숫자를 한글로 읽으면 어떻게 읽을지 변수에 선언
		int k03_i, k03_vj; //변수 선언
		
		String [] k03_units= {"영", "일", "이", "삼", "사", "오", "육", "칠", "팔", "구"}; //일의 자리 배열
		String [] k03_unitX= {"", "십", "백", "천", "만", "십", "백", "천", "억", "십"}; //단위 배열

		k03_i = 0; //0 할당
		k03_vj = sNumVal.length()-1; //예를들어, sNumVal이 1자리 String일때 j값은 0이 되어서 j[0]인 ""을 출력해 단위를 붙이지 않게 한다. 
		
		while(true) {//true조건이 성립하면 계속 반복한다.
			if(k03_i >= sNumVal.length()) break; // 단어의 길이보다 자리수가 길어진다면 중단해야한다.
			if(sNumVal.substring(k03_i, k03_i+1).equals("0")) { //해당 자리가 0일때 억, 만 자리일 경우만 단위값 붙임
				
				if(k03_unitX[k03_vj].equals("만") || k03_unitX[k03_vj].equals("억")) { //단위 배열에서 만 또는 억에 해당시
					k03_sNumVoice = k03_sNumVoice + "" + k03_unitX[k03_vj]; //해당 자리가 0이면 단위만 붙여준다. 
				} else { // 만 또는 억이 아니면 단위를 붙이지 않음
					
				}
			} else { //해당 자리가 0이 아닐 때
				k03_sNumVoice = k03_sNumVoice + k03_units[Integer.parseInt(sNumVal.substring(k03_i, k03_i+1))] + k03_unitX[k03_vj];
			} 
			k03_i++; k03_vj--; //i값은 string을 읽는 방향인 오른쪽으로 이동해야해서 0에서부터 증가
			//j값은 왼쪽에서부터 점점 커지는 단위값이므로 숫자의 길이-1로 시작해서 점차 감소
		}
		return k03_sNumVoice;
	}
}